{
  "version": 3,
  "file": "pageJonsQuest.js",
  "sources": [
    "games/jonsQuest/js/utils.js",
    "games/jonsQuest/js/audio/audio.js",
    "games/jonsQuest/js/graphics/graphics.js",
    "games/jonsQuest/js/physics/physics.js",
    "games/jonsQuest/js/engine/gameObject.js",
    "games/jonsQuest/js/engine/gameItem.js",
    "games/jonsQuest/js/enemy/enemy.js",
    "games/jonsQuest/js/level/startScreen.js",
    "games/jonsQuest/js/level/level.js",
    "games/jonsQuest/js/level/level0.js",
    "games/jonsQuest/js/engine/game.js",
    "games/jonsQuest/js/hero/hero.js",
    "games/jonsQuest/js/hero/heroGraphics.js",
    "games/jonsQuest/js/hero/heroPhysics.js",
    "games/jonsQuest/js/hero/heroInput.js",
    "games/jonsQuest/js/main.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACrzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AClpn
  "sourcesContent": [
    "/*\r\n    A place for generic math, set/get methods, and other small functions.\r\n    Also used for global data structures, enums, and functions.\r\n*/\r\nvar utils = (function () {\r\n    \t\r\n\r\n\r\n\treturn {\r\n\t\tdegToRad: function(deg){\r\n\t\t\treturn deg * 0.0174532925199432957;\r\n\t\t},\r\n\r\n        /**** Debug Printers ****/\r\n\t\tprintMouse: function () {\r\n\t\t    $(\"canvas\").on(\"mousemove\", function (e) {\r\n\t\t        console.log(e.offsetX, e.offsetY);\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\tprintDir: function (dir) {\r\n\t\t    switch (dir) {\r\n\t\t        case 0:\r\n\t\t            console.log(\"Dir.NONE\");\r\n\t\t            break;\r\n\t\t        case 1:\r\n\t\t            console.log(\"Dir.TOP\");\r\n\t\t            break;\r\n\t\t        case 2:\r\n\t\t            console.log(\"Dir.BOT\");\r\n\t\t            break;\r\n\t\t        case 3:\r\n\t\t            console.log(\"Dir.LEFT\");\r\n\t\t            break;\r\n\t\t        case 4:\r\n\t\t            console.log(\"Dir.RIGHT\");\r\n\t\t            break;\r\n\t\t        case 5:\r\n\t\t            console.log(\"Dir.IN\");\r\n\t\t            break;\r\n\t\t        default:\r\n\t\t            console.log(\"Dir.unknown\");\r\n\t\t    }\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n\r\n// global enums\r\nvar Dir = Object.freeze({\r\n    NONE: 0,\r\n    TOP: 1,\r\n    BOT: 2,\r\n    LEFT: 3,\r\n    RIGHT: 4,\r\n    IN: 5\r\n});\r\n\r\nvar Inv_e = Object.freeze({\r\n    NOT_HIT: 0,\r\n    HIT_WHITE: 1,\r\n    HIT_RED: 2\r\n});\r\n\r\nvar KeyCode = Object.freeze({\r\n    ENTER: 13,\r\n    J: 74,\r\n    K: 75\r\n});\r\n\r\nvar bullet = {\r\n    color: \"rgba(0, 182, 255, .85)\",\r\n    w: 19.5,\r\n    h: 9,\r\n    speed: 3.3\r\n};\r\n\r\n// global functions\r\nwindow.requestAnimFrame = (function () {\r\n    return window.requestAnimationFrame ||\r\n\t\t   window.webkitRequestAnimationFrame ||\r\n\r\n\t\t   function (callback) {\r\n\t\t       setTimeout(callback, 16.6666666667); // 60fps fallback\r\n\t\t   };\r\n})();\r\n",
    "var audio = (function () {\r\n\r\n    return {\r\n        bgMusic: new Audio(\"audio/firstChiptune/firstChiptune.mp3\"),\r\n        enterSound: new Audio(\"audio/synthetic_explosion_1.mp3\"),\r\n        itemPickedUp: new Audio(\"audio/life_pickup.mp3\"),\r\n        heartbeat: new Audio(\"audio/heartbeat.mp3\"),\r\n        jump: new Audio(\"audio/jump.mp3\"),\r\n        thud: new Audio(\"audio/thud.mp3\"),\r\n        step: new Audio(\"audio/step.mp3\"),\r\n        effort: new Audio(\"audio/woosh.mp3\"),\r\n        discovery: new Audio(\"audio/spell3.mp3\"),\r\n        enemyDeath: new Audio(\"audio/death.mp3\"),\r\n        heroDeath: new Audio(\"audio/DiscsOfTron_Cascade.mp3\"),\r\n        enchant: new Audio(\"audio/enchant.mp3\"),\r\n        isOn: false,\r\n\r\n\r\n        play: function (sound, stopPrev) {\r\n            stopPrev = (typeof (stopPrev) !== 'undefined') ? stopPrev : true;\r\n\r\n            if (sound.ended)\r\n                sound.play();\r\n            else {\r\n                if (stopPrev || sound.currentTime === 0) {\r\n                    sound.pause();\r\n                    sound.currentTime = 0;\r\n                    sound.play();\r\n                }\r\n            }\r\n        },\r\n\r\n        handleMuteButton: function () {\r\n            if ($('.audioState').hasClass('off')) {\r\n                $('.audioState span').removeClass('icon-volume-mute').addClass('icon-volume-medium');\r\n                $('.audioState').removeClass('off');\r\n                $('.audioState').addClass('on');\r\n\r\n                audio.mute(false);\r\n            }\r\n            else {\r\n                $('.audioState span').removeClass('icon-volume-medium').addClass('icon-volume-mute');\r\n                $('.audioState').removeClass('on');\r\n                $('.audioState').addClass('off');\r\n\r\n                audio.mute(true);\r\n            }\r\n        },\r\n\r\n        mute: function (onOrOff) {\r\n            audio.discovery.muted =\r\n            audio.enterSound.muted =\r\n            audio.bgMusic.muted =\r\n            audio.itemPickedUp.muted =\r\n            audio.heartbeat.muted =\r\n            audio.effort.muted = \r\n            audio.thud.muted = \r\n            audio.jump.muted = \r\n            audio.step.muted = \r\n            audio.enemyDeath.muted =\r\n            audio.heroDeath.muted =\r\n            audio.enchant.muted =\r\n                onOrOff;\r\n\r\n            onOrOff ?\r\n                audio.bgMusic.pause() :\r\n                audio.bgMusic.play();\r\n\r\n            audio.isOn = !onOrOff;\r\n        }\r\n    };\r\n})();\r\n",
    "/*\r\n    A library of generic graphics functions.\r\n*/\r\nvar Graphics = (function () {\r\n\r\n    var alpha = 1;\r\n\r\n    return {\r\n        ticker: 1,              // 1.0 --> 0.0 --> 1.0 --> ...\r\n        tickerStep: 0.01,\r\n        fadeOut: false,\r\n\r\n\r\n        blinkText: function (fontSize, x, y, str) {\r\n            str = (typeof (str) !== \"undefined\") ? str : \"PRESS ENTER\";\r\n\r\n            if (Graphics.ticker >= 1.35 || Graphics.ticker <= Graphics.tickerStep) {\r\n                Graphics.fadeOut = !Graphics.fadeOut;\r\n            }\r\n\r\n            if (Graphics.ticker >= 1) {\r\n                alpha = 1;\r\n            }\r\n            else if (Graphics.ticker <= Graphics.tickerStep) {\r\n                alpha = 0;\r\n            }\r\n            else {\r\n                alpha = Graphics.ticker;\r\n            }\r\n\r\n            ctx.font = fontSize + \"px 'Press Start 2P'\";\r\n            var tmpW = ctx.measureText(str).width;\r\n            ctx.fillStyle = \"rgba(233, 233, 233,\" + alpha + ')';\r\n            ctx.fillText(str, x - tmpW / 2, y);\r\n        },\r\n\r\n        drawEllipse: function (x, y, w, h) {\r\n            var kappa = 0.5522848,\r\n\t\t\t\tox = (w / 2) * kappa, // control point offset horizontal\r\n\t\t\t\toy = (h / 2) * kappa, // control point offset vertical\r\n\t\t\t\txe = x + w, // x-end\r\n\t\t\t\tye = y + h, // y-end\r\n\t\t\t\txm = x + w / 2, // x-middle\r\n\t\t\t\tym = y + h / 2 // y-middle\r\n            ;\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, ym);\r\n            ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\r\n            ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\r\n            ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\r\n            ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        },\r\n\r\n        drawRotate: function (img, x, y, angle) {\r\n            ctx.save();\r\n\r\n            ctx.translate(x, y);\t\t\t\t\t\t\t\t// move co-ord sys to img origin\r\n            ctx.rotate(utils.degToRad(angle));\r\n            ctx.translate(-img.width * 0.5, -img.height * 0.5); // move to top left of img\r\n\r\n            //ctx.scale(0.75, 0.75);\r\n            ctx.drawImage(img, 0, 0);\r\n\r\n            ctx.restore();\r\n        }\r\n    };\r\n})();\r\n",
    "/// <reference path=\"../hero/heroInput.js\" />\r\n/// <reference path=\"../hero/heroGraphics.js\" />\r\n/// <reference path=\"../hero/heroPhysics.js\" />\r\n/// <reference path=\"../hero/hero.js\" />\r\n\r\n/*\r\n    A library of generic physics functions.\r\n*/\r\nvar Physics = (function () {\r\n\r\n\r\n    return {\r\n        // could be sped up by checking if a does NOT intersect with b (e.g. using OR)\r\n        isCollision: function (a, b, moe, isLvl) {\r\n            var aX = (typeof (isLvl) !== \"undefined\") ? a.x + a.lvlX : a.x;\r\n\r\n            if ((aX + moe <= (b.x + b.w)) && // a is to the left of the right side of b\r\n\t\t\t\t(b.x + moe <= (aX + a.w)) && // a is to the right of the left side of b\r\n\t\t\t\t(a.y + moe <= (b.y + b.h)) && // a is higher than the bot of b\r\n\t\t\t\t(b.y + moe <= (a.y + a.h)) \t  // a is lower than the top of b\r\n\t\t\t) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // uses speculative contacts\r\n        solidRectCollision: function (collisionDir, obj) {\r\n            if (collisionDir != Dir.NONE) {\r\n                if (collisionDir == Dir.LEFT) {\r\n                    hero.onObjX = obj.x - hero.lvlX - hero.w;\r\n                    hero.onObjLvlX = hero.lvlX;\r\n                }\r\n                else if (collisionDir == Dir.RIGHT) {\r\n                    hero.onObjX = obj.x - hero.lvlX + obj.w;\r\n                    hero.onObjLvlX = hero.lvlX;\r\n                }\r\n                else if (collisionDir == Dir.TOP) {\r\n                    hero.onObjY = hero.y = obj.y - hero.h;\r\n                    hero.isJumping = false;\r\n                    hero.isOnObj = true;\r\n                }\r\n                else if (collisionDir == Dir.BOT) {\r\n                    if (hero.vY < -4) {\r\n                        audio.play(audio.thud, true);\r\n                    }\r\n\r\n                    hero.onObjY = hero.y = obj.y + obj.h;\r\n                    hero.jumpMod = 0;\r\n                    hero.vY = 0;\r\n                    console.log(\"bot\");\r\n\r\n                }\r\n\r\n                if ((collisionDir == Dir.LEFT) || (collisionDir == Dir.RIGHT)) {\r\n                    hero.x = hero.onObjX;\r\n                    hero.lvlX = hero.onObjLvlX;\r\n                }\r\n            }\r\n        }\r\n    };\r\n})();\r\n",
    "var GameObj = function (xx, yy, ww, hh, src) {\r\n    var img = null,\r\n\t\tready = false;\r\n\r\n    if (typeof (src) !== \"undefined\") {\r\n        img = new Image();\r\n        img.onload = function () { ready = true; };\r\n        img.src = src;\r\n    }\r\n\r\n    return {\r\n        initX: xx,\r\n        x: xx,\r\n        initY: yy,\r\n        y: yy,\r\n        w: ww,\r\n        h: hh,\r\n        vY: 0,\r\n\r\n\r\n        updatePos: function () {\r\n            if (this.y < FULLH - game.padFloor - this.h)\r\n                this.y += this.vY;\r\n            else\r\n                this.y = FULLH - game.padFloor - this.h;\r\n        },\r\n\r\n        draw: function () {\r\n            if (ready) {\r\n                ctx.drawImage(img, this.x, this.y);\r\n            }\r\n            else {\r\n                ctx.fillStyle = \"red\";\r\n                ctx.fillRect(this.x, this.y, this.w, this.h);\r\n            }\r\n        },\r\n\r\n        getImg: function () {\r\n            return img;\r\n        }\r\n    };\r\n};\r\n",
    "var GameItem = function () {\r\n\r\n    var parentDraw = null;\r\n\r\n    function _draw() {\r\n        return function () {\r\n            if (this.visible && !this.collected) {\r\n                parentDraw.apply(this);\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n\r\n    return {\r\n        collected: false,\r\n        holding: false,\r\n        visible: true,\r\n        val: -1,\r\n\r\n\r\n        init: function (g, v, vis) {\r\n            $.extend(this, g);\r\n\r\n            this.val = v;\r\n\r\n            if (typeof (vis) !== \"undefined\")\r\n                this.visible = vis;\r\n\r\n            parentDraw = this.draw;\r\n            this.draw = _draw();\r\n        }\r\n\r\n    };\r\n};\r\n",
    "var Enemy = function () {\r\n    var parentDraw = null,\r\n\t\tinitHealth = 0,\r\n\t\talive = true,\r\n\t\tdeadOnScreen = false,\r\n\t\tclearDir = true;\t\t// true = right; false = left;\r\n\r\n    function drawHealth(that) {\r\n        var healthLen = (that.w / initHealth) * that.health;\r\n\r\n        ctx.fillStyle = \"red\";\r\n        ctx.fillRect(that.x, that.y - 12, healthLen, 4);\r\n    }\r\n\r\n    function _draw() {\r\n        return function () {\r\n\r\n            if (alive || deadOnScreen) {\r\n                if (initHealth > 1)\r\n                    drawHealth(this);\r\n\r\n\r\n                ctx.save();\r\n                if (deadOnScreen)\r\n                    ctx.globalAlpha = 0.3;\r\n\r\n\r\n                parentDraw.apply(this);\r\n\r\n                ctx.restore();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        active: false,\r\n        health: 0,\r\n\r\n        init: function (g, ht) {\r\n            $.extend(this, g);\r\n            this.health = initHealth = ht;\r\n\r\n            parentDraw = this.draw;\r\n            this.draw = _draw();\r\n        },\r\n\r\n        update: function () {\r\n            if (deadOnScreen) {\r\n                this.x += clearDir ? 2 : -2;\r\n                this.y -= 14;\r\n\r\n                if (this.x < 0 || this.x > FULLW)\r\n                    deadOnScreen = false;\r\n            }\r\n            else if (!alive)\r\n                return;\r\n            else if (this.active && game.totalTicks % 3 === 0) {\r\n                if (this.x < hero.x)\r\n                    ++this.x;\r\n                else if (this.x > hero.x)\r\n                    --this.x;\r\n            }\r\n\r\n        },\r\n\r\n        death: function () {\r\n            clearDir = (hero.dir == Dir.RIGHT);\r\n\r\n            audio.enemyDeath.play();\r\n            hero.xp += 2;\r\n            alive = false;\r\n            deadOnScreen = true;\r\n        }\r\n\r\n    };\r\n};\r\n",
    "var startScreen = (function () {\r\n\r\n    var copyTitle1 = \"JON'S\",\r\n\t\tcopyTitle2 = \"QUEST\",\r\n\t\tcopyLine = String.fromCharCode(\"169\") + \" 2013 JON WIEDMANN\",\r\n        updateSetInterval = null,\r\n        renderAnimFrame = null\r\n    ;\r\n\r\n    function update() {\r\n        if (lastKeyDown == KeyCode.ENTER) {\r\n            ++game.lvl;\r\n\r\n            audio.enterSound.play();\r\n            audio.bgMusic.pause();\r\n\r\n            setTimeout(function(){\r\n                audio.bgMusic = new Audio(\"audio/inspiredBySparkMan/sparkBoy.mp3\");\r\n                audio.bgMusic.loop = true;\r\n                audio.bgMusic.volume = 0.45;\r\n\r\n                audio.isOn ?\r\n                    audio.bgMusic.play() :\r\n                    audio.bgMusic.pause();\r\n            }, 1000);\r\n\r\n            clearInterval(updateSetInterval);\r\n            cancelAnimationFrame(renderAnimFrame);\r\n            game.start();\r\n        }\r\n    }\r\n\r\n    function render() {\r\n        renderAnimFrame = requestAnimFrame(render);\r\n        \r\n        ctx.fillStyle = \"#000\";\r\n        ctx.fillRect(0, 0, FULLW, FULLH + game.padHUD);\r\n\r\n        //---- title\r\n\r\n        // title 1\r\n        ctx.font = \"29px 'Press Start 2P'\";\r\n        var startX = HALFW - ctx.measureText(copyTitle1).width / 2 + 11,\r\n\t\t\tstartY = 58;\r\n\r\n        ctx.setTransform(1, 0, -0.4, 1.4, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('J', startX + 4, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('J', startX, startY);\r\n        ctx.setTransform(1, 0, -0.2, 1.4, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('O', startX + 32, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('O', startX + 28, startY);\r\n        ctx.setTransform(1, 0, 0.05, 1.41, 0, -1);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('N', startX + 58, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('N', startX + 54, startY);\r\n        ctx.setTransform(1, 0, 0.23, 1.4, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText(\"'\", startX + 78, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText(\"'\", startX + 74, startY);\r\n        ctx.setTransform(1, 0, 0.42, 1.4, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('S', startX + 95, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('S', startX + 91, startY);\r\n\r\n\r\n        // title 2\r\n        ctx.font = \"36px 'Press Start 2P'\";\r\n        startX = HALFW - ctx.measureText(copyTitle2).width / 2 + 30;\r\n        startY = 98;\r\n\r\n        ctx.setTransform(1, 0, -0.5, 1.6, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('Q', startX + 4, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('Q', startX, startY);\r\n        ctx.setTransform(1, 0, -0.25, 1.6, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('U', startX + 26, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('U', startX + 22, startY);\r\n        ctx.setTransform(1, 0, 0.03, 1.6, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('E', startX + 50, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('E', startX + 46, startY);\r\n        ctx.setTransform(1, 0, 0.25, 1.6, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('S', startX + 74, startY + 3);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('S', startX + 70, startY);\r\n        ctx.setTransform(1, 0, 0.5, 1.6, 0, 0);\r\n        ctx.fillStyle = \"#222\";\r\n        ctx.fillText('T', startX + 90, startY + 4);\r\n        ctx.fillStyle = \"#ff6a00\";\r\n        ctx.fillText('T', startX + 86, startY);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\t// reset\r\n\r\n        //---- press enter\r\n        Graphics.blinkText(22, HALFW, HALFH + 81);\r\n\r\n        //---- copyright\r\n        ctx.font = \"13px 'Press Start 2P'\";\r\n        ctx.fillStyle = \"#ddd\";\r\n\r\n        ctx.fillText(copyLine, HALFW - ctx.measureText(copyLine).width / 2, FULLH + 44);\r\n    }\r\n\r\n    return {\r\n        start: function () {\r\n            updateSetInterval = setInterval(function () {\r\n                Graphics.ticker += Graphics.fadeOut ? -Graphics.tickerStep : Graphics.tickerStep;\r\n                update();\r\n            }, game.updateFPS);\r\n\r\n            render();\r\n        }\r\n    };\r\n})();\r\n",
    "var level = (function () {\r\n\r\n    var shuriken = null,\r\n\t\tcash = null,\r\n\t\tsyringe = null,\r\n\t\tmedKit = null,\r\n\r\n\t\tNUM_LEVELS = 5,\r\n\t\tlvl = new Array(NUM_LEVELS),\r\n\t\trecentLvlUpdate = 0,\r\n\t\tlvlBgImg = {}\r\n    ;\r\n\r\n    function drawHUD() {\t// TODO: break out static parts\r\n        // background\r\n        ctx.fillStyle = \"#070707\";\r\n        ctx.fillRect(0, FULLH, FULLW, game.padHUD);\r\n\r\n        ctx.fillStyle = \"#ddd\";\r\n        ctx.font = \"12px 'Press Start 2P'\";\r\n\r\n\r\n        ctx.fillText(\"HP-\" + hero.healthLvl, 15, FULLH + 24);\r\n        ctx.fillText(\"MP-\" + hero.manaLvl, 15, FULLH + 48);\r\n        ctx.fillText(\"XP\", 15, FULLH + 71);\r\n\r\n        // hp kit\r\n        ctx.fillText(hero.medKits, 210, FULLH + 50);\r\n        medKit.draw();\r\n\r\n        // mp kit\r\n        ctx.fillText(hero.manaKits, 315, FULLH + 50);\r\n        syringe.draw();\r\n\r\n        // ammo\r\n        ctx.fillText(hero.ammo, 410, FULLH + 50);\r\n        shuriken.draw();\r\n\r\n        // money\r\n        ctx.fillText(hero.cash, 515, FULLH + 50);\r\n        cash.draw();\r\n\r\n        // time\r\n        var min = Math.floor(game.actualTime / 60),\r\n\t\t\tsec = game.actualTime % 60;\r\n\r\n        if (sec < 10)\r\n            sec = '0' + sec;\r\n\r\n        if (min < 10)\r\n            min = '0' + min;\r\n\r\n        ctx.fillText(min + ':' + sec, FULLW - 84, FULLH + 34);\r\n    }\r\n\r\n    function loadBgImages(imgArr, callback) {\r\n        var count = 0;\r\n\r\n        for (var key in imgArr) {\r\n            if (imgArr[key] !== \"none\") {\r\n                lvlBgImg[key] = new Image();\r\n                lvlBgImg[key].onload = function () {\r\n                    callback(this.num);\r\n                };\r\n\r\n                lvlBgImg[key].src = imgArr[key];\r\n                lvlBgImg[key].num = count;\r\n            }\r\n\r\n            ++count;\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        collisionPts: [],\r\n        width: 0,\r\n\r\n\r\n        init: function () {\r\n\r\n            medKit = GameObj(238, FULLH + 31, 25, 24, \"img/medKit.png\");\r\n            syringe = GameObj(342, FULLH + 31, 25, 25, \"img/syringe.png\");\r\n            shuriken = GameObj(447, FULLH + 32, 24, 24, \"img/shuriken.png\");\r\n            cash = GameObj(548, FULLH + 33, 22, 24, \"img/cash.png\");\r\n\r\n            level.collisionPts = [\r\n                // level 0\r\n                {\r\n                    obj0: {\r\n                        x: 310,\r\n                        y: 161,\r\n                        w: 200,\r\n                        h: 30\r\n                    },\r\n                    obj1: {\r\n                        x: 600,\r\n                        y: 95,\r\n                        w: 200,\r\n                        h: 30\r\n                    },\r\n                    obj2: {\r\n                        x: 562,\r\n                        y: 230,\r\n                        w: 300,\r\n                        h: 30\r\n                    }\r\n                }\r\n            ];\r\n\r\n\r\n            for (var i = 0; i < NUM_LEVELS; ++i) {\r\n                lvl[i] = {\r\n                    status: false,\r\n                    bgColor: '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n                };\r\n            }\r\n\r\n            loadBgImages({\r\n                lvl0: \"img/lvl0.jpg\",\r\n                lvl1: \"none\"\r\n            }, function (num) {\r\n                lvl[num].status = true;\r\n            });\r\n\r\n            level.reset();\r\n            lvl0.init();\r\n        },\r\n\r\n        reset: function () {\r\n            level.width = 3198;\r\n\r\n            hero.x = 23;\r\n            hero.y = canvas.height - hero.h;\r\n            hero.isJumping = false;\r\n\r\n            hero.bulletArr.length = 0;\t\t// TODO: cache num bullets\r\n        },\r\n\r\n        /******************** Update ********************/\r\n        update: function () {\r\n\r\n            switch (game.lvl) {\r\n                case 0:\r\n                    lvl0.update();\r\n                    break;\r\n            }\r\n\r\n            // var tempLvl = game.lvl+1;\r\n            // \t\t\t\r\n            // if(tempLvl >= NUM_LEVELS)\r\n            // tempLvl = NUM_LEVELS-1;\r\n\r\n            // if(\t){        should reset level\r\n            // ++game.lvl\r\n            // recentLvlUpdate = \r\n            // \t\t\t    \r\n            // utils.reset()\r\n            // }\r\n        },\r\n\r\n        updateObjs: function () {\r\n            switch (game.lvl) {\r\n                case 0:\r\n                    lvl0.updateObjs();\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /******************** Render ********************/\r\n        render: function () {\r\n            // background\r\n            if (lvl[game.lvl].status) {\r\n                ctx.drawImage(lvlBgImg[\"lvl\" + game.lvl], hero.lvlX, 0, FULLW, FULLH, 0, 0, FULLW, FULLH);\r\n            }\r\n            else {\r\n                if (lvl[game.lvl].bgColor)\r\n                    ctx.fillStyle = lvl[game.lvl].bgColor;\r\n                else\r\n                    ctx.fillStyle = \"#222\";\r\n\r\n                ctx.fillRect(0, 0, FULLW, FULLH);\r\n            }\r\n\r\n            drawHUD();\r\n\r\n            switch (game.lvl) {\r\n                case 0:\r\n                    lvl0.render();\r\n                    break;\r\n            }\r\n        },\r\n\r\n        drawAfterHero: function () {\r\n            if (game.lvl === 0) {\r\n                if (lvl0.crate.holding)\r\n                    lvl0.crate.draw();\r\n\r\n            }\r\n        }\r\n\r\n    };\r\n})();\r\n",
    "/// <reference path=\"../hero/hero.js\" />\r\n/// <reference path=\"../hero/heroInput.js\" />\r\n/// <reference path=\"../hero/heroGraphics.js\" />\r\n/// <reference path=\"../hero/heroPhysics.js\" />\r\n/// <reference path=\"../physics/physics.js\" />\r\n\r\nvar lvl0 = (function () {\r\n\r\n    var cyborg = null,\r\n\t\thiddenCash = null,\r\n\t\tsack = null,\r\n\t\tbelt = null,\r\n\t\tbelt2 = null\r\n    ;\r\n    //var k = [];\r\n    var m = -0.52845528455;\r\n    \r\n    function beltPhysics() {\r\n        if (Physics.isCollision(hero, belt, 0)) {\r\n            var b = belt.initY + belt.h - hero.h;\r\n            var x = Math.abs(hero.lvlX - 680); // 680 is the init hero.lvlX when you enter the box from the left\r\n\r\n            hero.onObj(m * x + b);\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        init: function () {\r\n            sack = GameItem();\r\n            sack.init(\r\n                GameObj(680, 71, 20, 24, \"img/sack.png\"),\r\n                5\r\n            );\r\n\r\n            cyborg = Enemy();\r\n            cyborg.init(\r\n                GameObj(1700, FULLH - game.padFloor - 38 + 1, 28, 38, \"img/cyborgBnW.png\"), \r\n                1\r\n            );\r\n\r\n            hiddenCash = GameItem();\r\n            hiddenCash.init(\r\n                GameObj(140, 50, 22, 24, \"img/cash.png\"), \r\n                10, \r\n                false\r\n            );\r\n\r            lvl0.crate = GameItem();\r\n            lvl0.crate.init(\r\n                GameObj(500, FULLH - game.padFloor - 26, 24, 26, \"img/crate.png\")\r\n            );\r\n\r\n            belt = GameObj(1100, 80, 340, 190, \"img/belt.png\");\r\n        },\r\n\r\n        update: function () {\r\n            \r\n            hiddenCash.updatePos();\r\n            cyborg.update();\r\n\r\n            // sack\r\n            if (!sack.collected) {\r\n                if (Physics.isCollision(hero, sack, 0)) {\r\n                    sack.collected = true;\r\n                    audio.itemPickedUp.play();\r\n\r\n                    hero.ammo += sack.val;\r\n                }\r\n            }\r\n\r\n            // hidden cash\r\n            if (!hiddenCash.visible) {\r\n                for (var i = 0; i < hero.bulletArr.length; ++i) {\r\n                    if (Physics.isCollision(hero.bulletArr[i], hiddenCash, -17)) {\r\n                        hiddenCash.visible = true;\r\n                        audio.discovery.play();\r\n                    }\r\n                }\r\n            }\r\n            else if (!hiddenCash.collected) {\r\n\r\n                if (hiddenCash.visible) {\r\n                    hiddenCash.vY += game.gravity;\r\n                }\r\n\r\n                if (Physics.isCollision(hero, hiddenCash, 0)) {\r\n                    hiddenCash.collected = true;\r\n                    audio.itemPickedUp.play();\r\n                    hero.cash += hiddenCash.val;\r\n                }\r\n            }\r\n\r\n            // crate\r\n            if (!lvl0.crate.holding) {\r\n                if (Physics.isCollision(hero, lvl0.crate, 12)) {\r\n                    hero.isCarrying = true;\r\n                    lvl0.crate.holding = true;\r\n                    lvl0.crate.vY = 6.5;\r\n                }\r\n\r\n                //var collisionDir = hero.physics.objCollision(lvl0.crate);\r\n                \r\n                //if (collisionDir != Dir.TOP && collisionDir != Dir.NONE) {\r\n                //    hero.isCarrying = true;\r\n                //    lvl0.crate.holding = true;\r\n                //    lvl0.crate.vY = 6.5;\r\n                //}\r\n                //else if(collisionDir == Dir.TOP){\r\n                //    hero.onObj(hero.y -1);\r\n                //}\r\n            }\r\n            else {\r\n                if (hero.dir == Dir.RIGHT)\r\n                    lvl0.crate.x = hero.x + 22;\r\n                else\r\n                    lvl0.crate.x = hero.x - 22;\r\n\r\n                lvl0.crate.y = hero.y;\r\n            }\r\n            lvl0.crate.updatePos();\r\n\r\n\r\n\r\n            if (cyborg.health > 0) {\r\n                // hero and cyborg\r\n                if (Physics.isCollision(hero, cyborg, 0)) {\r\n                    cyborg.active = true;\r\n                    \r\n                    if (!hero.invincible) {\r\n                        audio.play(audio.heartbeat, true);\r\n\r\n                        hero.invincible = true;\r\n                        --hero.health;\r\n                    }\r\n                    \r\n                }\r\n\r\n                // bullets and cyborg\r\n                for (var i = 0; i < hero.bulletArr.length; ++i) {\r\n\r\n                    var wasCollision = false;\r\n\r\n                    if (Physics.isCollision(hero.bulletArr[i], cyborg, 0)) {\r\n                        wasCollision = true;\r\n                        audio.play(audio.thud, true);\r\n                    }\r\n\r\n                    if (wasCollision) {\r\n                        cyborg.active = true;\r\n\r\n                        hero.bulletArr.splice(i, 1); // remove ith item\r\n                        --cyborg.health;\r\n\r\n                        if (cyborg.health <= 0) {\r\n                            cyborg.death();\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                beltPhysics();\r\n            }\r\n\r\n        },\r\n\r\n        updateObjs: function () {\r\n            sack.x -= hero.vX;\r\n            cyborg.x -= hero.vX;\r\n            hiddenCash.x -= hero.vX;\r\n            belt.x -= hero.vX;\r\n            lvl0.crate.x -= hero.vX;\r\n        },\r\n\r\n        render: function () {\r\n\r\n            if (!sack.collected)\r\n                sack.draw();\r\n\r\n            hiddenCash.draw();\r\n            cyborg.draw();\r\n\r\n            //if (game.totalTicks % 60 === 0)\r\n            //    belt.draw(with differnt sprite);\r\n            //else\r\n                belt.draw();\r\n\r\n            if (!lvl0.crate.holding) {\r\n                lvl0.crate.draw();\r\n            }\r\n            else {\r\n                if (hero.vX === 0) {\r\n                    lvl0.crate.x += (hero.dir == Dir.RIGHT) ? -20 : 24;\r\n                    lvl0.crate.y += 6;\r\n                }\r\n            }\r\n\r\n            //for(var i=0; i < k.length; ++i){\r\n            //    k[i].draw();\r\n            //}\r\n\r\n        }\r\n    };\r\n\r\n})();\r\n",
    "var game = (function(){\r\n\tvar\tavgFPS = 0,\r\n\t\t//updateTimePrev = 0,\r\n        renderTimePrev = 0,\r\n        lag = 0,\r\n\t\tfpsHistory = [0]\r\n\t;\r\n\t\r\n\tfunction update() {\r\n\t\thero.update();\r\n\t\tlevel.update();\r\n\t}\r\n\t\r\n\tfunction render(renderTimeCur) {\r\n        // timers\r\n\t    if ((renderTimeCur - renderTimePrev) > 0) {\r\n\t        game.renderTimeBtw = renderTimeCur - renderTimePrev;\r\n\t    }\r\n\t    renderTimePrev = renderTimeCur;\r\n\r\n\r\n\t    requestAnimFrame(render);\r\n        \r\n\t    // drawing\r\n\t\tlevel.render();\r\n\t\thero.render();\r\n\t\t\r\n\t\tlevel.drawAfterHero();\r\n\t\tdrawFPS();\r\n\t}\r\n\t\r\n\tfunction drawFPS(fps) {\r\n\r\n\t    var actualFPS = (1000 / game.renderTimeBtw);\r\n\r\n\t    if (actualFPS != \"Infinity\") {\r\n\t        fpsHistory.push(actualFPS);\r\n\t    }\r\n\t    \r\n    \tif (game.totalTicks % 120 === 0) {\r\n    \t    var tot = 0;\r\n            \r\n    \t    for (var i in fpsHistory) {\r\n        \t\ttot += fpsHistory[i];\r\n        \t}\r\n    \t    \r\n    \t    if (fpsHistory.length > 0) {\r\n    \t        avgFPS = Math.floor(tot / fpsHistory.length);\r\n    \t    }\r\n    \t    else {\r\n    \t        avgFPS = 0;\r\n    \t    }\r\n        \tfpsHistory = [];\r\n        }\r\n    \t\r\n    \tctx.fillStyle = \"#ddd\";\r\n    \tctx.font = \"12px 'Press Start 2P'\";\r\n\t  \tctx.fillText(avgFPS + \" FPS\", FULLW - 84, FULLH + 65);\r\n\t}\r\n   \t\r\n\treturn {\r\n\t    gravity: 0.07,\r\n\t    //friction: 35,\r\n\t    padBot: 119,\t// total padding\r\n\t    padHUD: 80,\r\n\t    padFloor: 39,\r\n\t    lvl: -1,\r\n\t    updateFPS: 1000 / 10,  // 1000 / 120 ==> 2x target rate of 60fps\r\n\t    //updateTimeBtw: 0,\r\n\t    renderTimeBtw: 0,\r\n\t    totalTicks: 0,      // ticks are update iterations\r\n\t    actualTime: 0,\r\n\r\n\t    start: function () {\r\n\r\n            // update at fixed time interval\r\n\t        setInterval(function () {\r\n\t            ++game.totalTicks;\r\n\t            Graphics.ticker += Graphics.fadeOut ? -Graphics.tickerStep : Graphics.tickerStep;\r\n\r\n\t            //var updateTimeCur = new Date().getTime();\r\n\r\n\t            //if ((updateTimeCur - updateTimePrev) > 0) {\r\n\t                //game.updateTimeBtw = updateTimeCur - updateTimePrev;\r\n\t            //}\r\n\r\n\t            //updateTimePrev = updateTimeCur;\r\n\t            //lag += game.updateTimeBtw;\r\n\t            \r\n\t            //while (lag >= game.updateTimeBtw) {      // TODO: interpolate if needed\r\n\t                update();\r\n\t                //lag -= game.updateTimeBtw;\r\n\t            //}\r\n\t        }, game.updateFPS); \r\n\r\n\r\n            // render w/vsync (let browser decide)\r\n\t        render();\r\n\t    }\r\n\t};\r\n})();\r\n",
    "/// <reference path=\"heroInput.js\" />\r\n/// <reference path=\"heroGraphics.js\" />\r\n/// <reference path=\"heroInput.js\" />\r\n/// <reference path=\"../physics/physics.js\" />\r\n\r\n/*\r\n    The hero singleton object.\r\n*/\r\nvar hero = (function () {\r\n    var //self = this,\r\n        input = null,           // the hero input component\r\n        graphics = null,        // the hero graphics component\r\n\r\n        imgReady = false,\r\n\t\timg = null,\r\n\t\tshowRun = true,\r\n\t\tgameOver = false,\r\n\t\tspriteArr = []\r\n\t;\r\n\t\r\n\t\t\r\n\t/*********************** Update ***********************/\r\n    function checkHealth() {\r\n        if (hero.invincible)\r\n            --hero.invincibleTimer;\r\n\r\n        if (hero.invincibleTimer <= 0) {\r\n            hero.invincible = false;\r\n            hero.invincibleTimer = hero.invincibleTimer0;\r\n        }\r\n        \r\n        if (hero.health <= 0 && !gameOver) {\r\n            audio.heroDeath.play();\r\n            audio.bgMusic.muted = true;\r\n\r\n            alert(\"You died\");\r\n            location.reload();\r\n            gameOver = true;\r\n        }\r\n    }\r\n\r\n\tfunction getSpritePos(){\r\n\t    if (game.totalTicks % 30 === 0) {\r\n\t        showRun = !showRun;\r\n\t    }\r\n\r\n\t\tvar pos = {x: 0, y: 0};\r\n\t\t\r\n\t\tif(hero.isCarrying && hero.vX === 0){\r\n\t\t\tpos = spriteArr[\"playerDown\"];\r\n\t\t}\r\n\t\telse if(hero.dir == Dir.RIGHT){\r\n\t\t\tif(hero.vX > 0){\r\n   \t\t\t\tif(Math.abs(hero.vX) <= hero.aX*3.5)\r\n   \t\t\t\t\tpos = spriteArr[\"playerRight_Step\"];\r\n\t\t\t\telse if(showRun){\r\n\t\t\t\t\tpos = spriteArr[\"playerRight_Run1\"];\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t\tpos = spriteArr[\"playerRight_Run2\"];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tpos = spriteArr[\"playerRight\"];\r\n\t\t}\r\n\t\telse if(hero.dir == Dir.LEFT){ \r\n\t\t\tif(hero.vX < 0){\r\n\t\t\t\tif(Math.abs(hero.vX) <= hero.aX*3.5)\r\n   \t\t\t\t\tpos = spriteArr[\"playerLeft_Step\"];\r\n\t\t\t\telse if(showRun){\r\n\t\t\t\t\tpos = spriteArr[\"playerLeft_Run1\"];\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t\tpos = spriteArr[\"playerLeft_Run2\"];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tpos = spriteArr[\"playerLeft\"];\r\n\t\t}\r\n\t\t\r\n\t\tvar inv = hero.invincibleTimer % 40;\r\n\t\t\r\n\t\tif(hero.invincible && (inv >= 0 && inv <= 16)){\r\n\t\t\tpos = {x: -1, y: -1};\r\n\t\t}\r\n\t\t\r\n\t\thero.sx = pos.x;\r\n\t\thero.sy = pos.y;\r\n\t}\r\n\t\r\n\t/*********************** Render ***********************/\r\n\tfunction drawHero(){\r\n\t\tif(imgReady && hero.sx >= 0 && hero.sy >= 0){\r\n    \t\tctx.drawImage(img, hero.sx, hero.sy, hero.w, hero.h, hero.x, hero.y, hero.w, hero.h);\r\n    \t}\r\n\t}\r\n\t\t\r\n\t\t\r\n\treturn {\r\n\t    //protectedInfo: {\r\n            //...\r\n\t    //},\r\n\r\n\t\tx: 0,\t\t\t\t// top left of sprite\r\n\t\ty: 0,\r\n\t\tsx: 0,\t\t\t\t// sprite position\r\n\t\tsy: 0,\r\n\t\tlvlX: 0,\t\t\t\r\n\t\tw: 28,\r\n\t\th: 38,\r\n\t\tvX: 0,\r\n\t\tvY: 0,\r\n\t\tmaxVx: 3.6,         // TODO: should be const\r\n\t\tmaxVy: 10,         // TODO: should be const\r\n\t\taX: 0.17,\r\n\t\taY: 0.5,\r\n\t\tjumpMod: 4,\r\n\t\tjumpMod0: 4,            // TODO: should be const\r\n\t\tdir: Dir.RIGHT,\r\n\t\tisJumping: false,\r\n\t\tisCarrying: false,\r\n\t\tonGround: true,\r\n\t\tisOnObj: true,\r\n\t\tonObjX: -1,\r\n\t\tonObjY: -1,\r\n\t\tinvincible: false,\r\n\t\tinvincibleTimer: 120,\r\n\t\tinvincibleTimer0: 120,  // TODO: should be const\r\n\t\thealth: 4,\r\n\t\tmaxHealth: 5,\r\n\t\tmedKits: 1,\r\n\t\thealthLvl: 1,\r\n\t\tmana: 0,\r\n\t\tmaxMana: 4,\r\n\t\tmanaKits: 1,\r\n\t\tmanaLvl: 1,\r\n\t\tammo: 20,\r\n\t\tcash: 0,\r\n\t\tlvl: 1,\r\n\t\txp: 0,\r\n\t\txpNeeded: 50,\r\n\t\tbulletArr: [],\r\n\t\tphysics: null,         // the hero physics component\r\n\t\t\r\n\r\n\t\tinit: function(){\r\n\t\t\timg = new Image();\r\n\t\t\timg.onload = function () { imgReady = true; };\r\n\t\t\timg.src = \"../dungeon/web/img/sprites/player/player.png\";\r\n\t\t\t\r\n\t\t\t// grab texturePacker's sprite coords\r\n\t\t\t$.get('../dungeon/web/img/sprites/player/player.xml', function(xml){\r\n\t\t\t\tvar wrap = $(xml).find('sprite');\r\n\t\t\t\t\r\n\t\t\t\t$(wrap).each(function(){\r\n\t\t\t\t\tvar name = $(this).attr('n'),\r\n\t\t\t\t\t\tx = $(this).attr('x'),\r\n\t\t\t\t\t\ty = $(this).attr('y');\r\n\t\t\t\t\t\r\n\t\t\t\t\tname = name.substring(0, name.length-4);\r\n\t\t\t\t\tspriteArr[name] = {x: x, y: y};\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tinput = HeroInputComponent();\r\n\t\t\t    input.init();\r\n\t\t\thero.physics = HeroPhysicsComponent();\r\n\t\t\tgraphics = HeroGraphicsComponent();\r\n\t\t\t    graphics.init();\r\n\t\t},\r\n\t\t\r\n\t\tonObj: function(y){\r\n\t\t    hero.isJumping = false;\r\n\t\t    hero.isOnObj = true;\r\n\r\n\t\t    hero.y = y;\r\n\t\t    hero.onObjY = y;\r\n\t\t},\r\n\r\n\t\toffObj: function(){\r\n\t\t    hero.isOnObj = false;\r\n\t\t\thero.onObjX = -1;\r\n\t\t\thero.onObjY = -1;\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function () {\r\n\t\t    input.check();                          // updates velocities\r\n\t\t\thero.physics.updatePosition();          // updates positions\r\n\t\t\thero.physics.checkCollision();          // checks new positions\r\n\t\t\t\r\n\t\t\tcheckHealth();\r\n\t\t\tgetSpritePos();\r\n\t\t},\r\n\t\r\n\t\trender: function(){\r\n\t\t\tdrawHero();\r\n\t    \tgraphics.drawBullets();\r\n\t    \t\r\n\t\t\tgraphics.drawHealth();\r\n\t\t\tgraphics.drawMana();\r\n\t\t\tgraphics.drawXP();\r\n\t\t}\r\n\t};\r\n})();\r\n",
    "/*\r\n    The graphics component of hero.\r\n*/\r\nvar HeroGraphicsComponent = function () {\r\n    //$.extend(this, hero.protectedInfo);\r\n\r\n    var shuriken = null,\r\n        shurikenReady = false\r\n    ;\r\n\r\n\r\n    return {\r\n        init: function(){\r\n            shuriken = new Image();\r\n            shuriken.src = \"img/shuriken.png\";\r\n            shuriken.onload = function () { shurikenReady = true; };\r\n        },\r\n\r\n        drawBullets: function(){\r\n\t\t    for(var i=0; i < hero.bulletArr.length; ++i){\r\n\t\t        var dirOffset = hero.bulletArr[i].dirR ?\r\n    \t\t\t\t\t\t\t    hero.w : \r\n    \t\t\t\t\t\t\t    0;\r\n\t            \r\n\t\t        hero.bulletArr[i].deg += 5;\r\n            \r\n\t\t        Graphics.drawRotate(\r\n            \t    shuriken, \r\n            \t    hero.bulletArr[i].x + dirOffset,\r\n            \t    hero.bulletArr[i].y + 20,\r\n        \t \t    hero.bulletArr[i].deg\r\n    \t \t    );\r\n            \r\n\t\t    }\r\n        },\r\n\r\n        drawHealth: function (){\r\n\t\t    for(var i=0; i < hero.health; ++i){\r\n\t\t        ctx.fillStyle = \"red\";\r\n\t\t        ctx.fillRect(80 + i*21, FULLH + 14, 19, 8);\r\n\t\t    }\r\n        },\r\n\t\r\n        drawMana: function(){\r\n            for(var i=0; i < hero.mana; ++i){\r\n                ctx.fillStyle = \"#00b6ff\";\r\n                ctx.fillRect(80 + i*21, FULLH + 37, 19, 8);\r\n            }\r\n        },\r\n\t\r\n        drawXP: function () {\r\n            ctx.fillStyle = \"#ddd\";\r\n            ctx.font = \"12px 'Press Start 2P'\";\r\n        \t\r\n            var zero = (hero.xp < 10) ? '0' : '';\r\n            ctx.fillText(zero + hero.xp + '/' + hero.xpNeeded, 80, FULLH + 71);\r\n        }\r\n    };\r\n};\r\n",
    "/// <reference path=\"hero.js\" />\r\n/// <reference path=\"heroInput.js\" />\r\n/// <reference path=\"heroGraphics.js\" />\r\n/// <reference path=\"../physics/physics.js\" />\r\n\r\n/*\r\n    The physics component of hero.\r\n*/\r\nvar HeroPhysicsComponent = function () {\r\n    //$.extend(this, hero.protectedInfo);\r\n\r\n    function screenCollision() {\r\n        hero.onGround = false;\r\n\r\n        if (hero.y < -hero.h) {                     // feet above top of screen\r\n            hero.y = -hero.h;\r\n            hero.vY = 0;\r\n        }\r\n        else if (hero.y >= (canvas.height - game.padBot - hero.h)) { // bottom\r\n            hero.y = canvas.height - game.padBot - hero.h;\r\n            hero.isJumping = false;\r\n            hero.onGround = true;\r\n\r\n            hero.vY = 0;\r\n        }\r\n        else if (hero.isOnObj) { \t\t\t\t\t\t// on top of obj\r\n            hero.y = hero.onObjY;\r\n            hero.vY = 0;\r\n        }\r\n\r\n        if (hero.x < 0) { \t\t\t\t\t\t\t\t// left\r\n            hero.x = 0;\r\n            hero.vX = 0;\r\n        }\r\n        else if (hero.x > (canvas.width - hero.w)) { \t// right \r\n            hero.x = canvas.width - hero.w;\r\n            hero.vX = 0;\r\n        }\r\n    }\r\n\r\n    function bulletHandler() {\r\n        for (var i = 0; i < hero.bulletArr.length; ++i) {\r\n            hero.bulletArr[i].x += hero.bulletArr[i].dirR ? bullet.speed : -bullet.speed; // update position\r\n\r\n            if (hero.bulletArr[i].x > canvas.width || hero.bulletArr[i].x < 0) {\t\t// bullet and screen\r\n                hero.bulletArr.splice(i, 1); // remove ith item\r\n            }\r\n        }\r\n    }\r\n\r\n    function heroAndLvlCollision() {\r\n        var i = game.lvl,\r\n            collisionDir = Dir.NONE;\r\n\r\n        for (var j in level.collisionPts[i]) {\r\n            var k = level.collisionPts[i][j];\r\n            collisionDir = hero.physics.objCollision(k);\r\n\r\n            Physics.solidRectCollision(collisionDir, k);\r\n\r\n            if (collisionDir != Dir.NONE)\r\n                break;\r\n        }\r\n\r\n        if (collisionDir == Dir.NONE) {\r\n            hero.offObj();\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        updatePosition: function (){\t\r\n            if (hero.x != (hero.x + hero.vX)) {\r\n                audio.step.play();\r\n            }\r\n\r\n            if(((hero.dir == Dir.RIGHT && hero.x >= ((canvas.width/2) + 35)) ||\r\n               (hero.dir == Dir.LEFT && hero.x <= ((canvas.width/2) - 45))) &&\r\n               (hero.lvlX + hero.vX >= 0) &&\r\n               (hero.lvlX + hero.vX <= level.width - canvas.width)\r\n            ){\r\n                hero.lvlX += hero.vX;\r\n                level.updateObjs();\r\n            }\r\n            else {\r\n                hero.x += hero.vX;\r\n            }\r\n\r\n            hero.y += hero.vY;\r\n        },\r\n\r\n        checkCollision: function () {\r\n\t        bulletHandler();\t\t// bullet's and screen\r\n            screenCollision();\t    // hero and screen/ top of obj\r\n\t\t\r\n            heroAndLvlCollision();\r\n        },\r\n\r\n        /*\r\n            Checks for a collision between hero and obj.\r\n            Returns a collision direction.\r\n        */\r\n        objCollision: function(obj) {\r\n            var collisionDir = Dir.NONE;\r\n\r\n            // using player dimensions as the moe\r\n            if (Physics.isCollision(hero, obj, 0, true)) {\r\n\r\n                collisionDir = Dir.IN;\r\n\r\n                if (hero.dir == Dir.RIGHT && (hero.lvlX - hero.x < obj.x)) {        // left side of obj\r\n                    collisionDir = Dir.LEFT;\r\n                }\r\n                else if ((hero.x + hero.lvlX + hero.w) > (obj.x + obj.w)) {         // right side of obj\r\n                    collisionDir = Dir.RIGHT;\r\n                }\r\n\r\n\r\n                if ((hero.x != hero.onObjX) && ((hero.y + hero.h - ((obj.h / 2) + 1)) < obj.y) &&  // top of obj\r\n                    (hero.vY > 0) || hero.isOnObj   // moving down OR already on\r\n                ) {\r\n                    collisionDir = Dir.TOP;\r\n                }\r\n                else if ((hero.y + hero.h) > (obj.y + obj.h)) {                     // bot of obj\r\n                    collisionDir = Dir.BOT;\r\n                }\r\n            }\r\n\r\n            return collisionDir;\r\n        }\r\n    };\r\n};\r\n",
    "/// <reference path=\"hero.js\" />\r\n/// <reference path=\"heroGraphics.js\" />\r\n/// <reference path=\"heroPhysics.js\" />\r\n/// <reference path=\"../physics/physics.js\" />\r\n\r\n/*\r\n    The input component of hero.\r\n*/\r\nvar HeroInputComponent = function () {\r\n\r\n    return {\r\n        init: function () {\r\n            // global key vars\r\n\t        keysDown = {};\r\n            lastKeyDown = -1;\r\n\t\r\n            addEventListener(\"keydown\", function (e) {\r\n\r\n                if (e.keyCode == 32)\r\n                    e.preventDefault(); \t\t\t//----- space bar (scrolling to bottom of page)\r\n                else if (e.keyCode == 77)\t\t\t//----- mute/unmute (m)\r\n                    audio.handleMuteButton();\r\n                else if(e.keyCode == 66)            //----- resize (b)\r\n                    $(\".resize\").trigger(\"click\");\r\n                else if (e.keyCode == 75 &&\t\t\t//----- jump (k);       TODO: move to check() function\r\n                       (!hero.isJumping && ((lastKeyDown != 75) || !(75 in keysDown))) &&\r\n                       (hero.isOnObj || hero.onGround)\r\n                ) {\r\n                    audio.jump.play();\r\n                    hero.vY = 0;\r\n                    hero.isJumping = true;\r\n                    hero.offObj();\r\n                }\r\n                else if (e.keyCode == 74 &&\t\t//----- shoot (j);          TODO: move to check() function\r\n                        ((lastKeyDown != 74) || !(74 in keysDown))\r\n                ) {\r\n                    if (hero.ammo > 0 && !hero.isCarrying) {\r\n                        audio.play(audio.effort);\r\n\r\n                        hero.bulletArr[hero.bulletArr.length] = {\r\n                            x: hero.x,\r\n                            y: hero.y,\r\n                            w: bullet.w,\r\n                            h: bullet.h,\r\n                            dirR: (hero.dir == Dir.RIGHT),\r\n                            deg: 0\r\n                        };\r\n\r\n                        --hero.ammo;\r\n                    }\r\n                }\r\n\r\n                lastKeyDown = e.keyCode;\r\n                keysDown[e.keyCode] = true;\r\n            }, false);\r\n\t\r\n            addEventListener(\"keyup\", function (e) { delete keysDown[e.keyCode];}, false);\r\n        },\r\n\r\n        check: function () {\r\n            var doGravity = false;\r\n\r\n            if (hero.isJumping) {\r\n                if (hero.jumpMod > 0) {\r\n                    hero.vY -= hero.aY * hero.jumpMod--;\r\n                }\r\n                else {\r\n                    doGravity = true;\r\n                }\r\n            }\r\n            else {\r\n                hero.jumpMod = hero.jumpMod0;\r\n                doGravity = true;\r\n            }\r\n\r\n            if (doGravity) {\r\n                var fixVy = hero.vY + game.gravity*2;\r\n\r\n                if (fixVy > hero.maxVY) {\r\n                    hero.vY = hero.maxVy;\r\n                }\r\n                else {\r\n                    hero.vY = fixVy;\r\n                }\r\n            }\r\n\r\n\r\n            // --------- keys pressed --------\r\n            var leftOrRight = false;\r\n            //----- left (a)\r\n            if(65 in keysDown){ \t\t\t\r\n                hero.vX = (Math.abs(hero.vX - hero.aX) > hero.maxVx) ? -hero.maxVx : (hero.vX - hero.aX);\r\n                hero.dir = Dir.LEFT;\r\n                leftOrRight = true;\r\n            }\r\n\r\n\t\t\r\n            //----- right (d)\r\n            if (68 in keysDown) {\r\n                hero.vX = (Math.abs(hero.vX + hero.aX) > hero.maxVx) ? hero.maxVx : (hero.vX + hero.aX);\r\n                hero.dir = Dir.RIGHT;\r\n                leftOrRight = true;\r\n            }\r\n\t    \r\n            if(Math.abs(hero.vX) < hero.aX){    \r\n                hero.vX = 0;\r\n            }\r\n            else if(!leftOrRight){\r\n                //hero.vX += (hero.vX > 0) ? -game.friction : game.friction;\r\n                hero.vX /= 1.26;\r\n            }\r\n\t    \r\n\t    \r\n            //----- drop object (spacebar)\r\n            if(32 in keysDown){\t\t\t\t\r\n                lvl0.crate.holding = false;\r\n                hero.isCarrying = false;\r\n            }\r\n\r\n\t\t\r\n            //----- heal (h)\r\n            if(72 in keysDown){\r\n                if(hero.medKits > 0 && hero.health < hero.maxHealth){\r\n                    ++hero.health;\r\n                    --hero.medKits;\r\n\r\n                    audio.play(audio.enchant, true);\r\n                }\r\n            }\r\n\t\t\r\n\t\t\r\n            //----- restore (r)\r\n            if(82 in keysDown && !(17 in keysDown)){\t// 17 = ctrl\r\n                if(hero.manaKits > 0 && hero.mana < hero.maxMana){\r\n                    ++hero.mana;\r\n                    --hero.manaKits;\r\n\r\n                    audio.play(audio.enchant, true);\r\n                }\r\n            }\r\n\t\t\r\n        }\r\n    };\r\n};\r\n",
    "var Main = (function () {\r\n\r\n    function setCanvasGlobals() {\r\n        canvas = $(\"canvas\")[0];\r\n        ctx = canvas.getContext(\"2d\");\r\n\r\n        FULLW = canvas.width;\r\n        FULLH = canvas.height;\r\n        FULLH -= game.padHUD;\r\n\r\n        HALFW = FULLW / 2;\r\n        HALFH = FULLH / 2;\r\n    }\r\n\r\n    function setAudio() {\r\n        audio.bgMusic.loop = true;\r\n        audio.bgMusic.volume = 0.7;\r\n        audio.bgMusic.pause();\r\n\r\n        audio.enemyDeath.volume = 0.6;\r\n        audio.jump.volume = 0.4;\r\n        audio.thud.volume = 0.78;\r\n        audio.discovery.volume = 0.7;\r\n\r\n        audio.mute(true);\r\n        $(\".audioState\").on(\"click\", audio.handleMuteButton);\r\n\r\n        var wasClicked = false;\r\n        $(\".resize\").on(\"click\", function(){\r\n            if (wasClicked) {\r\n                $(canvas).css({ width: \"\", height: \"\" });\r\n                $(this).attr(\"class\", \"resize off\");\r\n                $(this).children(\"span\").attr(\"class\", \"icon-expand\");\r\n            }\r\n            else {\r\n                $(canvas).css({ width: \"100%\" });\r\n\r\n                // fix for IE\r\n                var width = $(canvas).width();\r\n                $(canvas).css({ height: 0.611 * width });\r\n\r\n\r\n                $(this).attr(\"class\", \"resize on\");\r\n                $(this).children(\"span\").attr(\"class\", \"icon-contract\");\r\n            }\r\n\r\n            wasClicked = !wasClicked;\r\n        });\r\n\r\n        //----- enable audio on start -----\r\n        audio.handleMuteButton()\r\n    }\r\n\r\n    function setupLoadingScreen() {\r\n        ctx.fillStyle = \"#e1e1e1\";\r\n        ctx.font = \"25px 'Press Start 2P'\";\r\n        ctx.fillText(\"LOADING...\", HALFW - 80, HALFH + 20);\r\n    }\r\n\r\n    return {\r\n        /*\r\n\t\t\tREQUIRES: game and hero singleton objects already instantiated\r\n\t\t*/\r\n        init: function () {\r\n            setCanvasGlobals();\r\n\r\n            setAudio();\r\n            setupLoadingScreen();\r\n\r\n            level.init();\r\n            hero.init();\r\n            \r\n\r\n            // game timer\r\n            setInterval(function () {\r\n                ++game.actualTime;\r\n\r\n                //console.log(game.actualTime + 's', hero.x + \"px\");\r\n                //console.log(game.actualTime + 's', hero.y + \"px\");\r\n\r\n            }, 1000);\r\n\r\n            startScreen.start();\r\n        }\r\n    }\r\n})();\r\n\r\n$(function () {\r\n    Main.init();\r\n});\r\n"
  ]
}