{
  "version": 3,
  "file": "pageVamp.js",
  "sources": [
    "games/common/js/GameEngine.js",
    "games/common/js/GameSave.js",
    "games/common/js/GameInput.js",
    "games/common/js/GameGraphics.js",
    "games/common/js/GameView.js",
    "games/common/js/TitleView.js",
    "games/vamp/js/LevelView.js",
    "games/vamp/js/main.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;ACrrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I;ACzEA;AACA;AACA;AACA;AACA;A;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "function GameEngine() {\r\n    // back button\r\n    var backBtn = document.createElement(\"a\");\r\n    backBtn.href = \"/#games\";\r\n    backBtn.innerText = \"Back\";\r\n    backBtn.className = \"btnBack\";\r\n    document.body.appendChild(backBtn);\r\n\r\n    // canvasWrap\r\n    var wrap = document.createElement(\"div\");\r\n    wrap.className = \"canvasWrap\";\r\n    canvas = document.createElement(\"canvas\");\r\n    canvas.setAttribute(\"width\", 16*63);\r\n    canvas.setAttribute(\"height\", 9*63);\r\n    wrap.appendChild(canvas);\r\n    document.body.appendChild(wrap);\r\n\r\n    ctx = canvas.getContext(\"2d\");\r\n\r\n    input = new GameInput();\r\n    view = new GameView();\r\n\r\n    function update() {\r\n        view.update();\r\n    }\r\n\r\n    function render() {\r\n        requestAnimationFrame(render);\r\n        view.render();\r\n    }\r\n\r\n    return {\r\n        start: function () {\r\n            setInterval(update, 1000 / 60);\r\n            requestAnimationFrame(render);\r\n        }\r\n    };\r\n}",
    "/// <reference path=\"../../vamp/js/linker.js\" />\r\n\r\nfunction GameSave() {\r\n\r\n}\r\n\r\nGameSave.prototype = (function () {\r\n    return {\r\n        load: function (slot) {\r\n            return localStorage[\"slot\" + slot];\r\n        },\r\n\r\n        getList: function () {\r\n            var zero = this.load(0),\r\n                one = this.load(1),\r\n                two = this.load(2),\r\n                def = \"---\"\r\n            ;\r\n            return list = [\r\n                (typeof(zero) !== \"undefined\") ? zero : def,\r\n                (typeof (one) !== \"undefined\") ? one : def,\r\n                (typeof (two) !== \"undefined\") ? two : def\r\n            ];\r\n        },\r\n\r\n        save: function (slot, data) {\r\n            localStorage[\"slot\" + slot] = data;\r\n        },\r\n\r\n        erase: function(slot){\r\n            localStorage.removeItem(\"slot\" + slot);\r\n            return this.getList();\r\n        }\r\n    };\r\n})();\r\n\r\nfunction GameSaveView() {\r\n    this.init();\r\n}\r\n\r\nGameSaveView.prototype = (function () {\r\n    var title = \"Select a save slot\";\r\n    var cta = \"Press Delete to erase a save\";\r\n\r\n    var storage = new GameSave();\r\n    var list = storage.getList();\r\n    var arrow;\r\n\r\n    return {\r\n        init: function () {\r\n            console.log(\"h\");\r\n            arrow = {\r\n                img: \">>\",\r\n                slot: 0,\r\n                x: canvas.width / 2 - ctx.measureText(list[0]).width/2 - 60,    // TODO: make instance var??\r\n                y: 200\r\n            };\r\n        },\r\n\r\n        then: function(callback){\r\n            this.then = callback;\r\n        },\r\n\r\n        update: function () {\r\n            if (lastKeyUp === KeyCode.ESC) {\r\n                this.then(lastKeyUp);\r\n            }\r\n            else if (lastKeyUp === KeyCode.ENTER) {\r\n                lastKeyUp = KeyCode.EMPTY;\r\n\r\n                var date = new Date();\r\n                var m = date.getMonth();\r\n                var d = date.getDay();\r\n                var y = date.getYear();\r\n                var t = date.toLocaleTimeString();\r\n\r\n                storage.save(arrow.slot, m + '/' + d + '/' + y + ' ' + t);\r\n                this.then(KeyCode.ENTER);\r\n            }\r\n            else if (lastKeyUp === KeyCode.DELETE) {\r\n                lastKeyUp = KeyCode.EMPTY;\r\n\r\n                list = storage.erase(arrow.slot);\r\n            }\r\n            else if (arrow.slot !== 2 && lastKeyUp === KeyCode.DOWN) {\r\n                lastKeyUp = KeyCode.EMPTY;\r\n\r\n                ++arrow.slot;\r\n                arrow.x = canvas.width / 2 - ctx.measureText(list[arrow.slot]).width / 2 - 60;\r\n                arrow.y += 80;\r\n            }\r\n            else if (arrow.slot !== 0 && lastKeyUp === KeyCode.UP) {\r\n                lastKeyUp = KeyCode.EMPTY;\r\n\r\n                --arrow.slot;\r\n                arrow.x = canvas.width / 2 - ctx.measureText(list[arrow.slot]).width / 2 - 60;\r\n                arrow.y -= 80;\r\n            }\r\n        },\r\n\r\n        render: function () {\r\n            ctx.fillStyle = \"#111\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n            ctx.font = \"36px Arial\"\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillText(title, canvas.width / 2 - ctx.measureText(title).width / 2, 80);\r\n\r\n            ctx.font = \"24px Arial\"\r\n\r\n            for (var i = 0; i < list.length; ++i) {\r\n                ctx.fillText(list[i], canvas.width / 2 - ctx.measureText(list[i]).width/2, 200 + i * 80);\r\n            }\r\n\r\n            ctx.fillText(arrow.img, arrow.x, arrow.y);\r\n        }\r\n    };\r\n})();",
    "var KeyCode = Object.freeze({\r\n    EMPTY: -1,\r\n    ENTER: 13,\r\n    CTRL: 17,\r\n    ESC: 27,\r\n    SPACEBAR: 32,\r\n    UP: 38,\r\n    DOWN: 40,\r\n    DELETE: 46,\r\n    A: 65,\r\n    D: 68,\r\n    F: 70,\r\n    H: 72,\r\n    J: 74,\r\n    K: 75,\r\n    M: 77,\r\n    O: 79,\r\n    R: 82,\r\n    S: 83,\r\n    W: 87\r\n});\r\n\r\nvar KeyCodeNames = {};\r\nKeyCodeNames[-1] = \"EMPTY\";\r\nKeyCodeNames[13] = \"ENTER\";\r\nKeyCodeNames[17] = \"CTRL\";\r\nKeyCodeNames[27] = \"ESC\";\r\nKeyCodeNames[32] = \"SPACEBAR\";\r\nKeyCodeNames[38] = \"UP\";\r\nKeyCodeNames[40] = \"DOWN\";\r\nKeyCodeNames[46] = \"DELETE\";\r\nKeyCodeNames[65] = \"A\";\r\nKeyCodeNames[68] = \"D\";\r\nKeyCodeNames[70] = \"F\";\r\nKeyCodeNames[72] = \"H\";\r\nKeyCodeNames[74] = \"J\";\r\nKeyCodeNames[75] = \"K\";\r\nKeyCodeNames[77] = \"M\";\r\nKeyCodeNames[79] = \"O\";\r\nKeyCodeNames[82] = \"R\";\r\nKeyCodeNames[83] = \"S\";\r\nKeyCodeNames[87] = \"W\";\r\n\r\nfunction GameInput() {\r\n    keysDown = {};\r\n    lastKeyUp = KeyCode.EMPTY;\r\n\r\n    function fixKey(key) {\r\n        if (key === KeyCode.W)\r\n            key = KeyCode.UP;\r\n        else if (key === KeyCode.S)\r\n            key = KeyCode.DOWN;\r\n\r\n        return key;\r\n    }\r\n\r\n    addEventListener(\"keydown\", function (e) {\r\n        keysDown[fixKey(e.keyCode)] = true;\r\n    }, true);\r\n\r\n    addEventListener(\"keyup\", function (e) {\r\n        lastKeyUp = fixKey(e.keyCode);\r\n        delete keysDown[lastKeyUp];\r\n    }, false);\r\n}\r\n\r\n//Input.prototype = function () {\r\n\r\n//    return {\r\n//        update: function () {\r\n\r\n//        }\r\n//    };\r\n//};",
    "function GameGraphics() {\r\n    return {\r\n\r\n    };\r\n}\r\n",
    "/// <reference path=\"commonLinker.js\" />\r\n\r\n/*\r\n    A generic view interface.\r\n*/\r\nfunction GameView() {\r\n\r\n}\r\n\r\nGameView.prototype = (function () {\r\n\r\n    return {\r\n        update: function () {\r\n\r\n        },\r\n\r\n        render: function () {\r\n            ctx.fillStyle = \"#ccc\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n            //ctx.font = \"36px Arial\";\r\n            //ctx.fillStyle = \"#000\";\r\n            //ctx.fillText(\"hello\", 10, 100);\r\n        }\r\n    };\r\n})();",
    "/// <reference path=\"linker.js\" />\r\n\r\n/*\r\n    Implements GameView.\r\n\r\n    @param(string) title The name of the game.\r\n*/\r\nfunction TitleView(title) {\r\n    this.title = title;\r\n}\r\n\r\nTitleView.prototype = (function () {\r\n    var cta = \"Press Enter\";\r\n\r\n    return {\r\n        then: function(callback){\r\n            this.then = callback;\r\n        },\r\n\r\n        update: function () {\r\n            if (lastKeyUp === KeyCode.ENTER) {\r\n                lastKeyUp = KeyCode.EMPTY;\r\n                this.then();\r\n            }\r\n        },\r\n\r\n        render: function () {\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n            ctx.font = \"36px Arial\"\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillText(this.title, canvas.width / 2 - ctx.measureText(this.title).width / 2, 100);\r\n\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(cta, canvas.width / 2 - ctx.measureText(cta).width / 2, canvas.height / 2);\r\n        }\r\n    };\r\n})();",
    "function LevelView() {\r\n\r\n}\r\n\r\nLevelView.prototype = (function () {\r\n    return {\r\n        update: function () {\r\n\r\n        },\r\n\r\n        render: function () {\r\n            ctx.fillStyle = \"brown\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n    };\r\n})();",
    "(function Main() {\r\n    var game = new GameEngine();\r\n    game.start();\r\n\r\n    var titleView = new TitleView(\"Vamp: The Great and Powerful\", true);\r\n    titleView.then(function () {\r\n        view = saveView;\r\n    });\r\n\r\n    var saveView = new GameSaveView();\r\n    saveView.then(function (key) {\r\n        if (key === KeyCode.ESC) {\r\n            view = titleView;\r\n        }\r\n        else if (key === KeyCode.ENTER) {\r\n            view = lvlView;\r\n        }\r\n    });\r\n\r\n    var lvlView = new LevelView();\r\n\r\n    view = titleView;\r\n})();"
  ]
}